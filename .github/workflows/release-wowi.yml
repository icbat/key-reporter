name: Release to WoW Interface

env:
  ADDON_NAME: KeyReporter
  ADDON_BUNDLE_FILES: KeyReporter.lua Localization.lua LICENSE README.md
  WOWI_ID: 25711

on:
  workflow_dispatch:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v2

    - name: Create 'dist' folder
      run: mkdir ${{env.ADDON_NAME}}/

    - name: Put everything into the folder
      run: cp -r ${{ env.ADDON_BUNDLE_FILES }} ${{ env.ADDON_NAME }}.toc ${{env.ADDON_NAME}}/
  
    - name: Zip it good
      run: zip -9 -r ${{env.ADDON_NAME}}.zip  ${{env.ADDON_NAME}}/
      
    - name: Parse WoW Addon Verions
      id: get_versions
      uses: icbat/parse-wow-addon-version@v0.0.1
      with:
        tocfile: ${{ env.ADDON_NAME }}.toc
    
    - name: Upload to WoW Interface
      uses: icbat/wow-addon-upload-action@v0.0.4
      with:
        id: ${{ env.WOWI_ID }}
        zipFilePath: ${{ env.ADDON_NAME }}.zip
        compatible: ${{ steps.get_versions.outputs.supported_version }}
        version: ${{ steps.get_versions.outputs.addon_version }}
        apiKey: ${{ secrets.WOW_INTERFACE }}

    - name: Create GH Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
        
    - name: Upload GH Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./${{ env.ADDON_NAME }}.zip
        asset_name: ${{ env.ADDON_NAME }}.zip
        asset_content_type: application/zip
